# Translations template for PROJECT.
# Copyright (C) 2016 ORGANIZATION
# This file is distributed under the same license as the PROJECT project.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PROJECT VERSION\n"
"Report-Msgid-Bugs-To: EMAIL@ADDRESS\n"
"POT-Creation-Date: 2016-04-17 06:03+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.2.0\n"

#: magnum/api/controllers/v1/container.py:326
#, python-format
msgid "Error while list container %(uuid)s: %(e)s."
msgstr ""

#: magnum/cmd/conductor.py:66
#, python-format
msgid ""
"The Heat template can not be found for either k8s atomic "
"%(atomic_template)s or coreos (coreos_template)%s. Install template first"
" if you want to create bay."
msgstr ""

#: magnum/common/exception.py:122
#, python-format
msgid "%(correlation_id)s:%(excp)s"
msgstr ""

#: magnum/common/exception.py:207
#, python-format
msgid "Exception in string format operation, kwargs: %s"
msgstr ""

#: magnum/common/keystone.py:117
msgid "Keystone API connection failed: no password, trust_id or token found."
msgstr ""

#: magnum/common/keystone.py:185
msgid "Failed to create trust"
msgstr ""

#: magnum/common/keystone.py:212
msgid "Failed to delete trust"
msgstr ""

#: magnum/common/keystone.py:222
msgid "Failed to create trustee"
msgstr ""

#: magnum/common/keystone.py:233
msgid "Failed to delete trustee"
msgstr ""

#: magnum/common/keystone.py:247
msgid "Failed to list regions"
msgstr ""

#: magnum/common/utils.py:372
#, python-format
msgid "Could not remove tmpdir: %s"
msgstr ""

#: magnum/common/utils.py:403
#, python-format
msgid "Failed to make file system. File system %s is not supported."
msgstr ""

#: magnum/common/utils.py:407
#, python-format
msgid "Failed to create a file system in %(path)s. Error: %(error)s"
msgstr ""

#: magnum/common/cert_manager/barbican_cert_manager.py:153
msgid "Error storing certificate data"
msgstr ""

#: magnum/common/cert_manager/barbican_cert_manager.py:188
msgid "Error getting {0}"
msgstr ""

#: magnum/common/cert_manager/barbican_cert_manager.py:214
msgid "Error deregistering as a consumer of {0}"
msgstr ""

#: magnum/common/cert_manager/barbican_cert_manager.py:241
msgid "Error recursively deleting certificate container {0}"
msgstr ""

#: magnum/common/cert_manager/local_cert_manager.py:115
msgid "Failed to store certificate."
msgstr ""

#: magnum/common/cert_manager/local_cert_manager.py:148
msgid "Failed to read certificate for {0}."
msgstr ""

#: magnum/common/cert_manager/local_cert_manager.py:158
msgid "Failed to read private key for {0}."
msgstr ""

#: magnum/common/cert_manager/local_cert_manager.py:170
#: magnum/common/cert_manager/local_cert_manager.py:178
msgid "Failed to read certificate."
msgstr ""

#: magnum/common/cert_manager/local_cert_manager.py:211
msgid "Failed to delete certificate {0}."
msgstr ""

#: magnum/common/x509/operations.py:180
msgid "Received invalid csr {0}."
msgstr ""

#: magnum/conductor/handlers/bay_conductor.py:265
#: magnum/conductor/handlers/bay_conductor.py:273
#, python-format
msgid ""
"Bay check exit after %(attempts)s attempts,stack_id: %(id)s, "
"stack_status: %(status)s"
msgstr ""

#: magnum/conductor/handlers/bay_conductor.py:306
#, python-format
msgid ""
"Bay error, stack status: %(bay_status)s, stack_id: %(stack_id)s, reason: "
"%(reason)s"
msgstr ""

#: magnum/conductor/handlers/docker_conductor.py:41
#, python-format
msgid "Error while connect to docker container %s"
msgstr ""

#: magnum/conductor/handlers/docker_conductor.py:123
#, python-format
msgid "Can not find docker instance with %s,set it to Error status"
msgstr ""

#: magnum/conductor/handlers/common/cert_manager.py:105
#, python-format
msgid "Failed to generate certificates for Bay: %s"
msgstr ""

#: magnum/conductor/handlers/common/trust_manager.py:40
#, python-format
msgid "Failed to create trustee and trust for Bay: %s"
msgstr ""

